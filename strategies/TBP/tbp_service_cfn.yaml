AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a service to the Fargate trading cluster that runs the Three (and Four) Bar Play Strategy
Parameters:
  StackName:
    Type: String
    Default: TBPService
    Description: The name of the service stack
  InfraStackName:
    Type: String
    Default: TCInfra
    Description: The name of the parent Fargate infra stack.
  ServiceName:
    Type: String
    Default: threeBarPlay
    Description: Name for the service
  ImageUrl:
    Type: String
    Default: 503921593645.dkr.ecr.us-west-2.amazonaws.com/tradingcluster:trialImage
    Description: The url of the docker image that contains trading code
  ContainerCpu:
    Type: String
    Default: "512"
    Description: How much CPU to give the container. 1024 = 1 CPU
  ContainerMemory:
    Type: String
    Default: "2048"
    Description: How much memory in megabytes to give the container

Resources:

  # CloudWatch Logs Group
  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref 'ServiceName'
      RetentionInDays: 7

  # The task definition. Describes the containers within and their resource requirements.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn: CloudWatchLogsGroup
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'InfraStackName', 'ECSTaskExecutionRole']]
      ContainerDefinitions:
        - Name: TESTCONTAINER
          Image: !Ref 'ImageUrl'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'ServiceName'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: awslogs-fargatecontainer
  
  # The service. A resource that allows multiple running copies of a type of task, gathering up their logs 
  # and metrics, and monitoring the number of running tasks and replacing any that have crashed.
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster:
        Fn::ImportValue:
          !Join [':', [!Ref 'InfraStackName', 'ClusterName']]
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - Fn::ImportValue:
                !Join [':', [!Ref 'InfraStackName', 'PrivateSubnet']]
      TaskDefinition: !Ref 'TaskDefinition'

Outputs:
  TaskDefinition:
    Description: The Fargate Service's Task Definition
    Value: !Ref 'TaskDefinition'
    Export:
      Name: !Sub ${StackName}:TaskDefinition
  Service:
    Description: The Fargate Service
    Value: !Ref 'Service'
    Export:
      Name: !Sub ${StackName}:Service