---
AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a service to the Fargate trading cluster that runs the Three (and Four) Bar Play Strategy
Parameters:
  Environment:
    Type: String
    Description: Environment (paper || live) that the service stack is associated with
  StackName:
    Type: String
    Default: TBP
    Description: The name of the service stack
  InfraStackName:
    Type: String
    Default: TCInfra
    Description: The name of the parent Fargate infra stack
  StrategyName:
    Type: String
    Default: threeBarPlay
    Description: Name for the service
  ImageUrl:
    Type: String
    Default: 503921593645.dkr.ecr.us-west-2.amazonaws.com/tradingcluster:tbp
    Description: The url of the docker image that contains trading code
  ContainerCpu:
    Type: String
    Default: "512"
    Description: How much CPU to give the container. 1024 = 1 CPU
  ContainerMemory:
    Type: String
    Default: "2048"
    Description: How much memory in megabytes to give the container 

Resources:

  # CloudWatch Logs Group
  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref StrategyName
      RetentionInDays: 7

  # The task definition. Describes the containers within and their resource requirements.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    DependsOn: CloudWatchLogsGroup
    Properties:
      Family: !Ref StrategyName
      Cpu: !Ref ContainerCpu
      Memory: !Ref ContainerMemory
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'InfraStackName', 'ECSTaskExecutionRole']]
      TaskRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'InfraStackName', 'ECSTaskExecutionRole']]
      ContainerDefinitions:
        - Name: TESTCONTAINER
          Image: !Ref 'ImageUrl'
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref 'StrategyName'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: awslogs-fargatecontainer

  # State machine that executes Task Definition
  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString: !Sub
      - |
        {
          "Version": "1.0",
          "Comment": "Run Fargate Task",
          "TimeoutSeconds": 43200,
          "StartAt": "RunTask",
          "States": {
            "RunTask": {
              "Type": "Task",
              "Resource": "arn:aws:states:::ecs:runTask.sync",
              "Parameters": {
                "LaunchType": "FARGATE",
                "Cluster": "${Cluster}",
                "TaskDefinition": "${TaskDefinition}",
                "NetworkConfiguration": {
                  "AwsvpcConfiguration": {
                    "Subnets": ["${PrivateSubnet}"],
                    "AssignPublicIp": "DISABLED"
                  }
                }
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "States.TaskFailed"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 3,
                  "BackoffRate": 2
                }
              ],
              "End": true
            }
          }
        }
      - Cluster: 
          Fn::ImportValue:
            !Join [':', [!Ref 'InfraStackName', 'ClusterNameArn']]
        PrivateSubnet:
          Fn::ImportValue: 
            !Join [':', [!Ref 'InfraStackName', 'PrivateSubnet']]
        TaskDefinition: !Ref TaskDefinition
      RoleArn: !GetAtt StateMachineRole.Arn
      
  # State Machine IAM Role
  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
            - Effect: Allow
              Principal:
                Service: 'states.amazonaws.com'
              Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: StateMachine
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: 'iam:PassRole'
                Resource:
                  Fn::ImportValue:
                    !Join [':', [!Ref 'InfraStackName', 'ECSTaskExecutionRoleArn']]
              - Effect: Allow
                Action: 'ecs:RunTask'
                Resource: !Ref TaskDefinition
                Condition:
                  ArnEquals:
                    'ecs:cluster': 
                      Fn::ImportValue:
                        !Join [':', [!Ref 'InfraStackName', 'ClusterNameArn']]
              - Effect: Allow
                Action:
                  - 'ecs:StopTask'
                  - 'ecs:DescribeTasks'
                Resource: '*'
                Condition:
                  ArnEquals:
                    'ecs:cluster': 
                      Fn::ImportValue:
                        !Join [':', [!Ref 'InfraStackName', 'ClusterNameArn']]
              - Effect: Allow
                Action:
                  - 'events:PutTargets'
                  - 'events:PutRule'
                  - 'events:DescribeRule'
                Resource: !Sub 'arn:${AWS::Partition}:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForECSTaskRule'

  # Rule that tells the State Machine when to execute on a cron schedule
  Rule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: 'cron(30 13 ? * MON-FRI *)'
      State: ENABLED
      Targets:
      - Arn: !Ref StateMachine
        Id: statemachine
        RoleArn: !GetAtt RuleRole.Arn

  # Rule IAM Role
  RuleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: 'events.amazonaws.com'
          Action: 'sts:AssumeRole'
      Policies:
      - PolicyName: EventRulePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: 'states:StartExecution'
            Resource: !Ref StateMachine

Outputs:
  TaskDefinition:
    Description: The Fargate Cluster's Task Definition
    Value: !Ref TaskDefinition
    Export:
      Name: !Sub ${StackName}:TaskDefinition
  StateMachine:
    Description: The State Machine that manages the Fargate Task
    Value: !Ref StateMachine
    Export:
      Name: !Sub ${StackName}:StateMachine
  StateMachineRole:
    Description: The State Machine IAM Role 
    Value: !Ref StateMachineRole
    Export:
      Name: !Sub ${StackName}:StateMachineRole
  Rule:
    Description: The Rule that dictates when State Machine tasks are executed
    Value: !Ref Rule
    Export:
      Name: !Sub ${StackName}:Rule
  RuleRole:
    Description: The Rule IAM Role
    Value: !Ref RuleRole
    Export:
      Name: !Sub ${StackName}:RuleRole